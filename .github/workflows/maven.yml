name: Build
on:
  push:
    branches:
      - master # the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: pass
          MYSQL_USER: aod
          MYSQL_DATABASE: secpickup
          MYSQL_PASSWORD: pass
          
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
        options: >-
          --name sonarqube
          -e SONARQUBE_JDBC_URL=jdbc:h2:tcp://sonarqube:9092/sonar
          -e SONARQUBE_JDBC_USERNAME=sonar
          -e SONARQUBE_JDBC_PASSWORD=sonar
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache SonarQube packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.sonar/cache
          target/sonar
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # - name: Check SonarQube server reachability
    #   run: ping sonarqube -c 4
    #   env:
    #     SONARQUBE_IP: ${{ job.services.sonarqube.ports[9000] }}

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: http://localhost:9000
      run: mvn -X verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

